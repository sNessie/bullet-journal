{"version":3,"sources":["../Y:/github/bullet-journal/src/components/DashboardPage/DashboardPage.js","../Y:/github/bullet-journal/src/reducers/habitsReducers.js","../Y:/github/bullet-journal/src/components/HabitTracker/AddHabit.js","../Y:/github/bullet-journal/src/reducers/filtersReducers.js","../Y:/github/bullet-journal/src/reducers/rootReducers.js","../Y:/github/bullet-journal/src/components/HabitTracker/ListTimesOfHabit.js","../Y:/github/bullet-journal/src/components/HabitTracker/ListHabits.js","../Y:/github/bullet-journal/src/components/HabitTracker/FiltersForm.js","../Y:/github/bullet-journal/src/components/HabitTracker/HabitTracker.js","../Y:/github/bullet-journal/src/components/NotFoundPage/NotFoundPage.js","../Y:/github/bullet-journal/src/components/ToDoList/ToDoList.js","../Y:/github/bullet-journal/src/components/MealPlanner/MealPlanner.js","../Y:/github/bullet-journal/src/components/MonthPlanner/MonthPlanner.js","../Y:/github/bullet-journal/src/components/Header/Header.js","../Y:/github/bullet-journal/src/routers/App.js","../Y:/github/bullet-journal/src/serviceWorker.js","../Y:/github/bullet-journal/src/index.js"],"names":["DashboardPage","react_default","a","createElement","habitsDefaultState","addHabit","_ref","arguments","length","undefined","_ref$name","name","_ref$date","date","_ref$times","times","_ref$timesRepeat","timesRepeat","type","habit","id","uuid","makeHabit","habitsReducers","state","action","concat","Object","toConsumableArray","filter","_ref3","map","objectSpread","updates","t","ready","AddHabbit","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","value","onTimesChange","match","handleSubmit","preventDefault","newHabit","format","generateTimesRepeat","dispatch","showForm","errorTimes","errorName","moment","onDateChange","onFocusChange","focused","startDate","Date","parseInt","i","setDate","getDate","push","toISOString","substring","_this$state","onSubmit","required","placeholder","autoFocus","onChange","react_dates","numberOfMonths","min","max","Component","connect","filtersDefaultState","text","filtersReducers","visibleHabits","habits","toLowerCase","includes","rootReducers","combineReducers","filters","ListTimesOfHabit","handleClick","_this2","timesList","time","key","onClick","habitsList","removeHabit","HabitTracker_ListTimesOfHabit","setTextFilter","HabitTracker","prevState","showAddForm","handleSave","makeReady","readyDayHabit","find","h","HabitTracker_FiltersForm","AddHabit","HabitTracker_ListHabits","NotFoundPage","Link","to","ToDoList","MealPlanner","MonthPlanner","Header","NavLink","exact","App","BrowserRouter","components_Header_Header","Switch","Route","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","prov","es","routers_App","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e8724be.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst DashboardPage = () => (\r\n  <div>\r\n    Dashboad Page\r\n  </div>\r\n);\r\n\r\nexport default DashboardPage;","import uuid from 'uuid';\r\n\r\nconst habitsDefaultState = [];\r\n\r\nexport const addHabit = (\r\n  {\r\n    name = '',\r\n    date = '',\r\n    times = 0,\r\n    timesRepeat = []\r\n  } = {}\r\n  ) => ({\r\n  type: 'ADD_HABIT',\r\n  habit: {\r\n    id:uuid(),\r\n    name,\r\n    date,\r\n    times,\r\n    timesRepeat\r\n  }\r\n});\r\n\r\nexport const removeHabit = ({id} = {}) => ({\r\n  type: 'REMOVE_HABIT',\r\n  id\r\n});\r\n\r\nexport const editHabit = (id, updates) => ({\r\n  type: 'EDIT_HABIT',\r\n  id,\r\n  updates\r\n});\r\nexport const makeHabit = (id) => ({\r\n  type: 'MAKE_HABIT',\r\n  id\r\n});\r\n\r\nconst habitsReducers = (state = habitsDefaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_HABIT':\r\n      return [\r\n        ...state,\r\n        action.habit\r\n      ];\r\n      case 'REMOVE_HABIT':\r\n      return state.filter(({ id }) => id !== action.id);\r\n      case 'EDIT_HABIT':\r\n      return state.map((habit)=>{\r\n        if (habit.id === action.id){\r\n          return {\r\n            ...habit,\r\n            ...action.updates\r\n          }\r\n        } else {\r\n          return habit;\r\n        }\r\n        });\r\n      case 'MAKE_HABIT':\r\n      return state.map((habit)=>{\r\n        habit.timesRepeat.map((t) =>{\r\n            if (t.id === action.id){\r\n              t.ready = true;\r\n                return{\r\n                  ...t\r\n                }\r\n            }else{\r\n              return{\r\n                ...t\r\n              }\r\n            }}\r\n            )\r\n        return {\r\n            ...habit\r\n          }\r\n        });\r\n      // return console.log(ready);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default habitsReducers;","import React, {Component} from 'react';\r\nimport uuid from 'uuid';\r\nimport moment from 'moment';\r\nimport { SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { connect } from 'react-redux';\r\nimport { addHabit } from '../../reducers/habitsReducers';\r\n\r\n\r\n\r\n\r\nclass AddHabbit extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      date: moment(),\r\n      times: '' ,\r\n      timesRepeat: [],\r\n      focused: false,\r\n      errorName: '',\r\n      errorTimes: ''\r\n    };\r\n}\r\n\r\n  handleChange = (e) => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n  };\r\n\r\n  onTimesChange = (e) => {\r\n    const times = e.target.value;\r\n    if(!times || times.match(/^([1-9]|[12]\\d|9[0-9])$/)){\r\n    this.setState(() => ({times}));\r\n  }\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.name ){\r\n      this.setState(() => ({errorName: \"Name cannot be black\" }));\r\n    } else if(!this.state.times){\r\n      this.setState(() => ({errorTimes: \"Times cannot be black\", errorName: '' }));\r\n    } else {\r\n      const newHabit={\r\n        name: this.state.name, \r\n        date: this.state.date.format('YYYY-MM-DD'),\r\n        times: this.state.times,\r\n        timesRepeat: this.generateTimesRepeat(this.state.date, this.state.times)\r\n      };\r\n      this.props.dispatch(addHabit(newHabit));\r\n      this.props.showForm();\r\n    }\r\n      this.setState({\r\n        name: '',\r\n        date: moment(),\r\n        times: 0,\r\n        timesRepeat: [],\r\n        errorName: '',\r\n        errorTimes: ''\r\n      });\r\n};\r\n\r\n  onDateChange = (date) => {\r\n    this.setState(() => ({date}));\r\n  };\r\n\r\n  onFocusChange = ({ focused }) => {\r\n    this.setState(() => ({ focused }))\r\n  }\r\n\r\ngenerateTimesRepeat = (date, times) => {\r\n  let startDate = new Date(date);\r\n  times = parseInt(times, 10);\r\n  let timesRepeat = [];\r\n  let id;\r\n  for(let i=0; i<times; i++){\r\n    id = uuid();\r\n    startDate.setDate(startDate.getDate() + i);\r\n    timesRepeat.push({id: id, date: startDate.toISOString().substring(0, 10), ready: false });\r\n\r\n  }\r\n  return timesRepeat;\r\n\r\n}\r\n\r\n  render(){\r\n    const {name, times} = this.state;\r\n  return (\r\n    <div>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <input type=\"text\"\r\n              required\r\n              placeholder=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n              autoFocus\r\n              onChange={this.handleChange} />\r\n            <label>\r\n              Start date:\r\n              <SingleDatePicker\r\n                  date={this.state.date}\r\n                  onDateChange = {this.onDateChange}\r\n                  focused = {this.state.focused}\r\n                  onFocusChange={this.onFocusChange}\r\n                  numberOfMonths={1}\r\n                  id=\"123\"\r\n                  />\r\n            </label>\r\n            <label>\r\n              Days repeat:\r\n              <input type=\"number\"\r\n                required\r\n                min=\"1\"\r\n                max=\"100\"\r\n                name=\"times\"\r\n                value={times}\r\n                onChange={this.onTimesChange} />\r\n            </label>\r\n            <button type=\"submit\">+</button>\r\n          </form>\r\n          <div>{this.state.errorName} {this.state.errorTimes}</div>\r\n    </div>\r\n  )\r\n}}\r\n\r\nexport default connect()(AddHabbit);\r\n","const filtersDefaultState = {\r\n    text: ''\r\n};\r\n\r\nexport const setTextFilter = (text='')=> ({\r\n  type: 'SET_TEXT_FILTER',\r\n  text\r\n});\r\n\r\n\r\nconst filtersReducers = (state = filtersDefaultState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_TEXT_FILTER':\r\n      return {\r\n          ...state,\r\n          text: action.text\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default filtersReducers;","import habitsReducers from './habitsReducers';\r\nimport filtersReducers from './filtersReducers';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const visibleHabits = (habits, {text}) => {\r\n  return habits.filter((habit) => {\r\n    const textMatch = habit.name.toLowerCase().includes(text.toLowerCase());\r\n    return textMatch;\r\n  })\r\n};\r\n\r\nexport const rootReducers = combineReducers({\r\n  habits: habitsReducers,\r\n  filters: filtersReducers\r\n});\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeHabit } from '../../reducers/habitsReducers';\r\nimport { visibleHabits } from '../../reducers/rootReducers';\r\n\r\nclass ListTimesOfHabit extends Component {\r\n\r\n    handleClick = (id) => {\r\n        this.props.dispatch(makeHabit(id));\r\n    }\r\n    render (){\r\n        const timesList = this.props.times.map(time => {\r\n            return(\r\n            <div key={time.id}>\r\n                <div>\r\n                    date: {time.date}\r\n                </div>\r\n                <div>\r\n                    ready: {time.ready ? 'yes' :'no'}\r\n                    {time.ready ? ''\r\n                    :\r\n                    <button  onClick={() => this.handleClick(time.id)}>\r\n                        Make ready\r\n                    </button>\r\n                    }\r\n                </div>\r\n            </div>\r\n            )\r\n        });\r\n        return (\r\n            <div>\r\n                {timesList}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      habits: visibleHabits(state.habits, state.filters)\r\n    };\r\n  }\r\nexport default connect(mapStateToProps)(ListTimesOfHabit);","import React from 'react';\r\nimport ListTimesOfHabit from './ListTimesOfHabit';\r\nimport { connect } from 'react-redux';\r\nimport { visibleHabits } from '../../reducers/rootReducers';\r\nimport { removeHabit } from '../../reducers/habitsReducers';\r\n\r\n\r\nconst ListHabits = ({habits, dispatch}) => {\r\n    const habitsList = habits.map(habit => {\r\n        return (\r\n            <div key={habit.id}>\r\n            <h1>\r\n                {habit.name}\r\n            </h1>\r\n            <button onClick={() => {\r\n                        dispatch(removeHabit({id: habit.id}))\r\n                    }}>Remove</button>\r\n            <div>\r\n                Date of starting: {habit.date}\r\n            </div>\r\n            <div>\r\n                Times to repeat: {habit.times}\r\n            </div>\r\n            <div>\r\n                Ready:\r\n                <ListTimesOfHabit times={habit.timesRepeat} />\r\n            </div>\r\n            </div>\r\n\r\n        );\r\n    })\r\n    return (\r\n        <div>\r\n            {habitsList}\r\n        </div>\r\n    )\r\n\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      habits: visibleHabits(state.habits, state.filters)\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(ListHabits);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setTextFilter } from '../../reducers/filtersReducers';\r\n\r\n\r\nconst FiltersForm = (props) => {\r\n    return (\r\n        <div>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            value={props.filters.text}\r\n            onChange={(e) => {\r\n                props.dispatch(setTextFilter(e.target.value))\r\n            }}\r\n            />\r\n    </div>\r\n)};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      filters: state.filters\r\n    };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(FiltersForm);","import React, {Component} from 'react';\r\nimport AddHabit from './AddHabit';\r\nimport uuid from 'uuid';\r\nimport ListHabits from './ListHabits';\r\nimport FiltersForm from \"./FiltersForm\";\r\n\r\n\r\nclass HabitTracker extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n    showAddForm: false\r\n  }\r\n}\r\n\r\n  showForm = () => {\r\n    this.setState((prevState, props) => {\r\n      return{\r\n        showAddForm: !prevState.showAddForm\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSave = (habit) => {\r\n    this.setState(() => {\r\n      const newHabit = {...habit, id: uuid()}\r\n      return{\r\n         habits: [...this.state.habits, newHabit]\r\n      }\r\n  });\r\n  };\r\n\r\n  makeReady = (i) => {\r\n    this.setState(() => {\r\n      const readyHabit = this.state.habits.find(h => (h.timesRepeat.find(t => t.id === i))); \r\n      const readyDayHabit = readyHabit.timesRepeat.find(t => t.id === i);\r\n      readyDayHabit.ready = !readyDayHabit.ready;\r\n      return{\r\n        habits: [...this.state.habits]\r\n      }\r\n  })\r\n  };\r\n\r\n  render (){\r\n    const { showAddForm } = this.state;\r\n    return(\r\n      <div>\r\n        <button onClick={this.showForm}>\r\n        {showAddForm ? 'Hide add form' :'Show add form'}\r\n        </button>\r\n        <FiltersForm />\r\n        {showAddForm ? <AddHabit showForm={this.showForm} /> : null }\r\n        <ListHabits  />\r\n      </div>\r\n    )\r\n  }\r\n};\r\n\r\nexport default HabitTracker;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    404 - <Link to=\"/\">Go home</Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\n\r\nconst ToDoList = () => (\r\n  <div>\r\n    ToDoList Page\r\n  </div>\r\n);\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nconst MealPlanner = () => (\r\n  <div>\r\n      MealPlanner Page\r\n  </div>\r\n);\r\n\r\nexport default MealPlanner;","import React from 'react';\r\n\r\nconst MonthPlanner = () => (\r\n  <div>\r\n      MonthPlanner Page\r\n  </div>\r\n);\r\n\r\nexport default MonthPlanner;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => (\r\n  <header>\r\n      <ul>\r\n        <li><NavLink to=\"/\" exact={true}>Home</NavLink></li>\r\n        <li><NavLink to=\"/to-do-list\" >ToDo List</NavLink></li>\r\n        <li><NavLink to=\"/habit-tracker\" >Habit Tracker</NavLink></li>\r\n        <li><NavLink to=\"/meal-planner\" >Meal Planner</NavLink></li>\r\n        <li><NavLink to=\"/month-planner\" >Month Planner</NavLink></li>\r\n    </ul>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\r\nimport DashboardPage from '../components/DashboardPage/DashboardPage';\r\nimport HabitTracker from '../components/HabitTracker/HabitTracker';\r\nimport NotFoundPage from '../components/NotFoundPage/NotFoundPage';\r\nimport ToDoList from '../components/ToDoList/ToDoList';\r\nimport MealPlanner from '../components/MealPlanner/MealPlanner';\r\nimport MonthPlanner from '../components/MonthPlanner/MonthPlanner';\r\nimport Header from '../components/Header/Header';\r\n\r\n\r\nconst App = () => (\r\n    <BrowserRouter>\r\n    <div>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={DashboardPage} exact={true} />\r\n        <Route path=\"/to-do-list\" component={ToDoList} />\r\n        <Route path=\"/habit-tracker\" component={HabitTracker} />\r\n        <Route path=\"/meal-planner\" component={MealPlanner} />\r\n        <Route path=\"/month-planner\" component={MonthPlanner} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </div>\r\n  </BrowserRouter>\r\n);\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './routers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { createStore } from 'redux';\r\nimport { rootReducers } from './reducers/rootReducers';\r\nimport { addHabit } from './reducers/habitsReducers';\r\n// import { setTextFilter } from './reducers/filtersReducers';\r\n\r\n\r\n\r\n\r\n\r\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nstore.dispatch(addHabit({\r\n  name: 'walk a dog',\r\n  date: '2019-02-01',\r\n  times: 1,\r\n  timesRepeat: [{\r\n    \"id\": 101,\r\n    \"date\":\"2018-09-05\",\r\n    \"ready\": false\r\n        }]\r\n}));\r\n\r\nstore.dispatch(addHabit({name: \"jogging with dog\", date: '2019-02-09'}));\r\n\r\n// store.dispatch(setTextFilter('dog'));\r\n\r\n\r\nconst prov = (\r\n  <Provider store={store} >\r\n    <App />\r\n  </Provider>\r\n);\r\n\r\n\r\nReactDOM.render(prov, document.getElementById('root'));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}